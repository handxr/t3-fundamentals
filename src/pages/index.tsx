import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, useUser } from "@clerk/nextjs";

import { api } from "@/utils/api";
import Image from "next/image";
import { LoadingPage } from "@/components/loading";
import toast from "react-hot-toast";

import { PostView } from "@/components";

const CreatePostWizard = () => {
  const { user } = useUser();

  const ctx = api.useContext();

  const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: async () => {
      await ctx.posts.getAll.invalidate();
    },
    onError: (err) => {
      toast.error(err.message);
    },
  });

  if (!user) return null;

  return (
    <div className="flex w-full gap-4">
      <Image
        src={user.profileImageUrl}
        alt="Profile Image"
        className="h-12 w-12 rounded-full"
        width={48}
        height={48}
      />
      <input
        placeholder="Type something fun!"
        className="grow bg-transparent"
        onKeyDown={(e) => {
          if (e.key === "Enter") {
            mutate({ content: e.currentTarget.value });
            e.currentTarget.value = "";
          }
        }}
        disabled={isPosting}
      />
    </div>
  );
};

const Feed = () => {
  const { data, isLoading, isError, error } = api.posts.getAll.useQuery();

  if (isLoading) return <LoadingPage />;

  if (isError) {
    return <p>{error.message}</p>;
  }

  return (
    <ul className="flex flex-col">
      {/* {data.map((item) => (
        <PostView key={item.post.id} {...item} />
      ))} */}
    </ul>
  );
};

const Home: NextPage = () => {
  const { isLoaded, isSignedIn } = useUser();
  api.posts.getAll.useQuery();

  if (!isLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen justify-center ">
        <div className="w-full border-x border-slate-400  md:max-w-2xl">
          <div className="j flex border-b border-slate-400 p-4">
            {isSignedIn ? (
              <CreatePostWizard />
            ) : (
              <SignInButton>Login</SignInButton>
            )}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
